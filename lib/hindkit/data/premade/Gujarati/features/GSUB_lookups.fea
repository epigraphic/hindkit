# -------------------
# BASIC SHAPING FORMS
# -------------------

# Akhand Ligatures
# ----------------

lookup akhn {
  sub gjKA gjVirama gjSSA by gjK_SSA;
  sub gjJA gjVirama gjNYA by gjJ_NYA;
} akhn;


# Reph Forms
# ----------

lookup rphf {
  sub gjRA gjVirama by gjReph;
} rphf;


# Rakar Forms
# -----------

lookup rkrf_new {

  sub gjKA   gjVirama gjRA by   gjK_RA;
  sub gjKHA  gjVirama gjRA by  gjKH_RA;
  sub gjGA   gjVirama gjRA by   gjG_RA;
  sub gjGHA  gjVirama gjRA by  gjGH_RA;
  # sub gjNGA  gjVirama gjRA by  gjNG_RA;
  sub gjCA   gjVirama gjRA by   gjC_RA;
  # sub gjCHA  gjVirama gjRA by  gjCH_RA;
  sub gjJA   gjVirama gjRA by   gjJ_RA;
  sub gjJHA  gjVirama gjRA by  gjJH_RA;
  sub gjNYA  gjVirama gjRA by  gjNY_RA;
  # sub gjTTA  gjVirama gjRA by  gjTT_RA;
  # sub gjTTHA gjVirama gjRA by gjTTH_RA;
  # sub gjDDA  gjVirama gjRA by  gjDD_RA;
  # sub gjDDHA gjVirama gjRA by gjDDH_RA;
  sub gjNNA  gjVirama gjRA by  gjNN_RA;
  sub gjTA   gjVirama gjRA by   gjT_RA;
  sub gjTHA  gjVirama gjRA by  gjTH_RA;
  sub gjDA   gjVirama gjRA by   gjD_RA;
  sub gjDHA  gjVirama gjRA by  gjDH_RA;
  sub gjNA   gjVirama gjRA by   gjN_RA;
  sub gjPA   gjVirama gjRA by   gjP_RA;
  sub gjPHA  gjVirama gjRA by  gjPH_RA;
  sub gjBA   gjVirama gjRA by   gjB_RA;
  sub gjBHA  gjVirama gjRA by  gjBH_RA;
  sub gjMA   gjVirama gjRA by   gjM_RA;
  sub gjYA   gjVirama gjRA by   gjY_RA;
  # Reph
  sub gjLA   gjVirama gjRA by   gjL_RA;
  sub gjVA   gjVirama gjRA by   gjV_RA;
  sub gjSHA  gjVirama gjRA by  gjSH_RA;
  sub gjSSA  gjVirama gjRA by  gjSS_RA;
  sub gjSA   gjVirama gjRA by   gjS_RA;
  sub gjHA   gjVirama gjRA by   gjH_RA;
  sub gjLLA  gjVirama gjRA by  gjLL_RA;

  sub gjK_SSA gjVirama gjRA by gjK_SS_RA;
  sub gjJ_NYA gjVirama gjRA by gjJ_NY_RA;

} rkrf_new;


# Below-base Forms
# ----------------

lookup blwf_new {
  sub gjVirama gjRA by gjRAc2;
} blwf_new;

lookup blwf_old {
  sub gjRA gjVirama by gjRAc2;
} blwf_old;


# Half Forms
# ----------

lookup half {

  sub gjKA   gjVirama by gjK;
  sub gjKHA  gjVirama by gjKH;
  sub gjGA   gjVirama by gjG;
  sub gjGHA  gjVirama by gjGH;
  # sub gjNGA  gjVirama by gjNG;
  sub gjCA   gjVirama by gjC;
  # sub gjCHA  gjVirama by gjCH;
  sub gjJA   gjVirama by gjJ;
  # sub gjJHA  gjVirama by gjJH;
  sub gjNYA  gjVirama by gjNY;
  # sub gjTTA  gjVirama by gjTT;
  # sub gjTTHA gjVirama by gjTTH;
  # sub gjDDA  gjVirama by gjDD;
  # sub gjDDHA gjVirama by gjDDH;
  sub gjNNA  gjVirama by gjNN;
  sub gjTA   gjVirama by gjT;
  sub gjTHA  gjVirama by gjTH;
  # sub gjDA   gjVirama by gjD;
  sub gjDHA  gjVirama by gjDH;
  sub gjNA   gjVirama by gjN;
  sub gjPA   gjVirama by gjP;
  sub gjPHA  gjVirama by gjPH;
  sub gjBA   gjVirama by gjB;
  sub gjBHA  gjVirama by gjBH;
  sub gjMA   gjVirama by gjM;
  sub gjYA   gjVirama by gjY;
  # sub gjRA   gjVirama by gjR;
  sub gjLA   gjVirama by gjL;
  sub gjVA   gjVirama by gjV;
  sub gjSHA  gjVirama by gjSH;
  sub gjSSA  gjVirama by gjSS;
  sub gjSA   gjVirama by gjS;
  sub gjHA   gjVirama by gjH;
  sub gjLLA  gjVirama by gjLL;

  sub gjK_SSA gjVirama by gjK_SS;
  sub gjJ_NYA gjVirama by gjJ_NY;

} half;

lookup half_new {

  sub   gjK_RA gjVirama by   gjK_R;
  sub  gjKH_RA gjVirama by  gjKH_R;
  sub   gjG_RA gjVirama by   gjG_R;
  sub  gjGH_RA gjVirama by  gjGH_R;
  # sub  gjNG_RA gjVirama by  gjNG_R;
  sub   gjC_RA gjVirama by   gjC_R;
  # sub  gjCH_RA gjVirama by  gjCH_R;
  sub   gjJ_RA gjVirama by   gjJ_R;
  # sub  gjJH_RA gjVirama by  gjJH_R;
  sub  gjNY_RA gjVirama by  gjNY_R;
  # sub  gjTT_RA gjVirama by  gjTT_R;
  # sub gjTTH_RA gjVirama by gjTTH_R;
  # sub  gjDD_RA gjVirama by  gjDD_R;
  # sub gjDDH_RA gjVirama by gjDDH_R;
  sub  gjNN_RA gjVirama by  gjNN_R;
  sub   gjT_RA gjVirama by   gjT_R;
  sub  gjTH_RA gjVirama by  gjTH_R;
  # sub   gjD_RA gjVirama by   gjD_R;
  sub  gjDH_RA gjVirama by  gjDH_R;
  sub   gjN_RA gjVirama by   gjN_R;
  sub   gjP_RA gjVirama by   gjP_R;
  sub  gjPH_RA gjVirama by  gjPH_R;
  sub   gjB_RA gjVirama by   gjB_R;
  sub  gjBH_RA gjVirama by  gjBH_R;
  sub   gjM_RA gjVirama by   gjM_R;
  sub   gjY_RA gjVirama by   gjY_R;
  # sub gjR_RA gjVirama by gjR_R; # Reph
  sub   gjL_RA gjVirama by   gjL_R;
  sub   gjV_RA gjVirama by   gjV_R;
  sub  gjSH_RA gjVirama by  gjSH_R;
  sub  gjSS_RA gjVirama by  gjSS_R;
  sub   gjS_RA gjVirama by   gjS_R;
  # sub   gjH_RA gjVirama by   gjH_R;
  sub  gjLL_RA gjVirama by  gjLL_R;

  sub gjK_SS_RA gjVirama by gjK_SS_R;
  sub gjJ_NY_RA gjVirama by gjJ_NY_R;

} half_new;


# Vattu Variants
# --------------

lookup vatu_old {

  sub gjKA   gjRAc2 by   gjK_RA;
  sub gjKHA  gjRAc2 by  gjKH_RA;
  sub gjGA   gjRAc2 by   gjG_RA;
  sub gjGHA  gjRAc2 by  gjGH_RA;
  # sub gjNGA  gjRAc2 by  gjNG_RA;
  sub gjCA   gjRAc2 by   gjC_RA;
  # sub gjCHA  gjRAc2 by  gjCH_RA;
  sub gjJA   gjRAc2 by   gjJ_RA;
  sub gjJHA  gjRAc2 by  gjJH_RA;
  sub gjNYA  gjRAc2 by  gjNY_RA;
  # sub gjTTA  gjRAc2 by  gjTT_RA;
  # sub gjTTHA gjRAc2 by gjTTH_RA;
  # sub gjDDA  gjRAc2 by  gjDD_RA;
  # sub gjDDHA gjRAc2 by gjDDH_RA;
  sub gjNNA  gjRAc2 by  gjNN_RA;
  sub gjTA   gjRAc2 by   gjT_RA;
  sub gjTHA  gjRAc2 by  gjTH_RA;
  sub gjDA   gjRAc2 by   gjD_RA;
  sub gjDHA  gjRAc2 by  gjDH_RA;
  sub gjNA   gjRAc2 by   gjN_RA;
  sub gjPA   gjRAc2 by   gjP_RA;
  sub gjPHA  gjRAc2 by  gjPH_RA;
  sub gjBA   gjRAc2 by   gjB_RA;
  sub gjBHA  gjRAc2 by  gjBH_RA;
  sub gjMA   gjRAc2 by   gjM_RA;
  sub gjYA   gjRAc2 by   gjY_RA;
  # Reph
  sub gjLA   gjRAc2 by   gjL_RA;
  sub gjVA   gjRAc2 by   gjV_RA;
  sub gjSHA  gjRAc2 by  gjSH_RA;
  sub gjSSA  gjRAc2 by  gjSS_RA;
  sub gjSA   gjRAc2 by   gjS_RA;
  sub gjHA   gjRAc2 by   gjH_RA;
  sub gjLLA  gjRAc2 by  gjLL_RA;

  sub gjK_SSA gjRAc2 by gjK_SS_RA;
  sub gjJ_NYA gjRAc2 by gjJ_NY_RA;

  sub gjK   gjRAc2 by   gjK_R;
  sub gjKH  gjRAc2 by  gjKH_R;
  sub gjG   gjRAc2 by   gjG_R;
  sub gjGH  gjRAc2 by  gjGH_R;
  # sub gjNG  gjRAc2 by  gjNG_R;
  sub gjC   gjRAc2 by   gjC_R;
  # sub gjCH  gjRAc2 by  gjCH_R;
  sub gjJ   gjRAc2 by   gjJ_R;
  # sub gjJH  gjRAc2 by  gjJH_R;
  sub gjNY  gjRAc2 by  gjNY_R;
  # sub gjTT  gjRAc2 by  gjTT_R;
  # sub gjTTH gjRAc2 by gjTTH_R;
  # sub gjDD  gjRAc2 by  gjDD_R;
  # sub gjDDH gjRAc2 by gjDDH_R;
  sub gjNN  gjRAc2 by  gjNN_R;
  sub gjT   gjRAc2 by   gjT_R;
  sub gjTH  gjRAc2 by  gjTH_R;
  # sub gjD   gjRAc2 by   gjD_R;
  sub gjDH  gjRAc2 by  gjDH_R;
  sub gjN   gjRAc2 by   gjN_R;
  sub gjP   gjRAc2 by   gjP_R;
  sub gjPH  gjRAc2 by  gjPH_R;
  sub gjB   gjRAc2 by   gjB_R;
  sub gjBH  gjRAc2 by  gjBH_R;
  sub gjM   gjRAc2 by   gjM_R;
  sub gjY   gjRAc2 by   gjY_R;
  # Reph
  sub gjL   gjRAc2 by   gjL_R;
  sub gjV   gjRAc2 by   gjV_R;
  sub gjSH  gjRAc2 by  gjSH_R;
  sub gjSS  gjRAc2 by  gjSS_R;
  sub gjS   gjRAc2 by   gjS_R;
  # sub gjH   gjRAc2 by   gjH_R;
  sub gjLL  gjRAc2 by  gjLL_R;

  sub gjK_SS gjRAc2 by gjK_SS_R;
  sub gjJ_NY gjRAc2 by gjJ_NY_R;

} vatu_old;


# Conjunct Forms
# --------------

lookup cjct_new {
  sub gjNGA gjVirama gjKA by gjNG_KA;
  sub gjNGA gjVirama gjGA by gjNG_GA;
  sub gjNGA gjVirama gjGHA by gjNG_GHA;
  sub gjNGA gjVirama gjMA by gjNG_MA;
  sub gjNGA gjVirama gjYA by gjNG_YA;
  sub gjCHA gjVirama gjYA by gjCH_YA;
  sub gjCHA gjVirama gjVA by gjCH_VA;
  sub gjTTA gjVirama gjTTA by gjTT_TTA;
  sub gjTTA gjVirama gjTTHA by gjTT_TTHA;
  sub gjTTA gjVirama gjYA by gjTT_YA;
  sub gjTTA gjVirama gjVA by gjTT_VA;
  sub gjTTHA gjVirama gjTTHA by gjTTH_TTHA;
  sub gjTTHA gjVirama gjYA by gjTTH_YA;
  sub gjDDA gjVirama gjDDA by gjDD_DDA;
  sub gjDDA gjVirama gjDDHA by gjDD_DDHA;
  sub gjDDA gjVirama gjYA by gjDD_YA;
  sub gjDDHA gjVirama gjDDHA by gjDDH_DDHA;
  sub gjDDHA gjVirama gjYA by gjDDH_YA;
  sub gjDA gjVirama gjGA by gjD_GA;
  sub gjDA gjVirama gjGHA by gjD_GHA;
  sub gjDA gjVirama gjDA by gjD_DA;
  sub gjDA gjVirama gjDHA by gjD_DHA;
  sub gjDA gjVirama gjNA by gjD_NA;
  sub gjDA gjVirama gjBA by gjD_BA;
  sub gjDA gjVirama gjBHA by gjD_BHA;
  sub gjDA gjVirama gjMA by gjD_MA;
  sub gjDA gjVirama gjYA by gjD_YA;
  sub gjDA gjVirama gjVA by gjD_VA;
} cjct_new;


# ----------------------------
# MANDATORY PRESENTATION FORMS
# ----------------------------

# Pre-base Substitution
# ---------------------

lookup pres_decompose {

  sub gjE       by gjA gjmE;
  sub gjAI      by gjA gjmAI;
  sub gjEcandra by gjA gjmEcandra;

  sub gjAA      by gjA gjmAA;
  sub gjO       by gjA gjmAA gjmE;
  sub gjAU      by gjA gjmAA gjmAI;
  sub gjOcandra by gjA gjmAA gjmEcandra;

  sub gjmO       by gjmAA gjmE;
  sub gjmAU      by gjmAA gjmAI;
  sub gjmOcandra by gjmAA gjmEcandra;

} pres_decompose;

# lookup pres_old { # The same as `lookup cjct_new` in this font
# } pres_old;

lookup pres {
  sub gjK gjKA by gjK_KA;
  sub gjK gjYA by gjK_YA;
  # sub gjG gjNA by gjG_NA;
  sub gjNY gjCA by gjNY_CA;
  sub gjNY gjJA by gjNY_JA;
  sub gjT gjTA by gjT_TA;
  sub gjT gjT by gjT_T;
  # sub gjN gjNA by gjN_NA;
  sub gjPH gjYA by gjPH_YA;
  sub gjSH gjCA by gjSH_CA;
  # sub gjSH gjNA by gjSH_NA;
  # sub gjSH gjLA by gjSH_LA;
  # sub gjSH gjVA by gjSH_VA;
  sub gjSS gjTTA by gjSS_TTA;
  sub gjSS gjTTHA by gjSS_TTHA;
  sub gjS gjT_RA by gjS_T_RA;
  sub gjH gjNNA by gjH_NNA;
  sub gjH gjNA by gjH_NA;
  sub gjH gjMA by gjH_MA;
  sub gjH gjYA by gjH_YA;
  sub gjH gjLA by gjH_LA;
  sub gjH gjVA by gjH_VA;
  sub gjLL gjYA by gjLL_YA;
} pres;

include (matra_i_matching.fea);


# Above-base Substitution
# -----------------------

# RA + matra vocalic liquid (mvR/RR/L/LL):

@vocalic_liquids = [gjvR gjvRR gjvL gjvLL];
@matra_vocalic_liquids = [gjmvR gjmvRR gjmvL gjmvLL];

lookup CONTEXTUAL_ra_to_vocalic_liquid {
  sub gjRA' gjmvR  by gjvR;
  sub gjRA' gjmvRR by gjvRR;
  sub gjRA' gjmvL  by gjvL;
  sub gjRA' gjmvLL by gjvLL;
} CONTEXTUAL_ra_to_vocalic_liquid;

lookup CONTEXTUAL_matra_vocalic_liquid_to_reph {
  sub @matra_vocalic_liquids by gjReph;
} CONTEXTUAL_matra_vocalic_liquid_to_reph;

lookup abvs_ra_matra_vocalic_liquids {
  sub
    gjRA'
    lookup CONTEXTUAL_ra_to_vocalic_liquid
    @matra_vocalic_liquids'
    lookup CONTEXTUAL_matra_vocalic_liquid_to_reph;
} abvs_ra_matra_vocalic_liquids;

lookup abvs_consonant_vowel_ligatures {
  sub gjJA gjmAA by gjJA_mAA;
  sub gjJA gjmII by gjJA_mII;
} abvs_consonant_vowel_ligatures;

# General above-base marks:

lookup abvs {

  # 1. Reph + syllable-modifier:
  sub gjReph gjAnusvara by gjReph_Anusvara;

  # 2. Matra + reph:
  sub gjmII      gjReph by gjmII_Reph.01;
  sub gjmE       gjReph by gjmE_Reph;
  sub gjmAI      gjReph by gjmAI_Reph;
  sub gjmEcandra gjReph by gjmEcandra_Reph;

  # 3. Matra + syllable-modifier:
  sub gjmII      gjAnusvara by gjmII_Anusvara.01;
  sub gjmE       gjAnusvara by gjmE_Anusvara;
  sub gjmAI      gjAnusvara by gjmAI_Anusvara;
  sub gjmEcandra gjAnusvara by gjmEcandra_Anusvara;

  # 4. Matra + reph + syllable-modifier:
  sub gjmII      gjReph gjAnusvara by gjmII_Reph_Anusvara.01;
  sub gjmE       gjReph gjAnusvara by gjmE_Reph_Anusvara;
  sub gjmAI      gjReph gjAnusvara by gjmAI_Reph_Anusvara;
  sub gjmEcandra gjReph gjAnusvara by gjmEcandra_Reph_Anusvara;

} abvs;

@matra_i_variants = [gjmI.01 gjmI.02 gjmI.03 gjmI.04 gjmI.05 gjmI.06 gjmI.07];
@matra_i_anusvara_variants = [gjmI_Anusvara.01 gjmI_Anusvara.02 gjmI_Anusvara.03 gjmI_Anusvara.04 gjmI_Anusvara.05 gjmI_Anusvara.06 gjmI_Anusvara.07];
@matra_i_reph_variants = [gjmI_Reph.01 gjmI_Reph.02 gjmI_Reph.03 gjmI_Reph.04 gjmI_Reph.05 gjmI_Reph.06 gjmI_Reph.07];
@matra_i_reph_anusvara_variants = [gjmI_Reph_Anusvara.01 gjmI_Reph_Anusvara.02 gjmI_Reph_Anusvara.03 gjmI_Reph_Anusvara.04 gjmI_Reph_Anusvara.05 gjmI_Reph_Anusvara.06 gjmI_Reph_Anusvara.07];

@MARKS_BELOW = [gjRAc2];

lookup abvs_matrai_step_A {
  sub @matra_i_variants' @generated_BASES_FOR_MATRA_I gjAnusvara by @matra_i_anusvara_variants;
  sub @matra_i_variants' @generated_BASES_FOR_MATRA_I gjReph by @matra_i_reph_variants;
  sub @matra_i_variants' @generated_BASES_FOR_MATRA_I gjReph_Anusvara by @matra_i_reph_anusvara_variants;
  sub @matra_i_variants' @generated_BASES_FOR_MATRA_I @MARKS_BELOW gjAnusvara by @matra_i_anusvara_variants;
  sub @matra_i_variants' @generated_BASES_FOR_MATRA_I @MARKS_BELOW gjReph by @matra_i_reph_variants;
  sub @matra_i_variants' @generated_BASES_FOR_MATRA_I @MARKS_BELOW gjReph_Anusvara by @matra_i_reph_anusvara_variants;
} abvs_matrai_step_A;

lookup abvs_matrai_step_B {
  sub
    [@matra_i_anusvara_variants @matra_i_reph_variants @matra_i_reph_anusvara_variants] @generated_BASES_FOR_MATRA_I
    [gjAnusvara gjReph gjReph_Anusvara]'
    by
    \NULL;
  sub
    [@matra_i_anusvara_variants @matra_i_reph_variants @matra_i_reph_anusvara_variants] @generated_BASES_FOR_MATRA_I @MARKS_BELOW
    [gjAnusvara gjReph gjReph_Anusvara]'
    by
    \NULL;
} abvs_matrai_step_B;


# Below-base Substitution
# -----------------------

lookup CONTEXTUAL_h_to_ha_virama {
  sub gjH by gjHA gjVirama;
} CONTEXTUAL_h_to_ha_virama;

lookup CONTEXTUAL_virama_to_ra_c2 {
  sub gjVirama by gjRAc2;
  sub gjRAc2 by gjVirama;
} CONTEXTUAL_virama_to_ra_c2;

lookup blws_old_1 {
  sub gjH' lookup CONTEXTUAL_h_to_ha_virama gjRAc2;
} blws_old_1;

lookup blws_old_2 {
  sub
    gjVirama' lookup CONTEXTUAL_virama_to_ra_c2
    gjRAc2' lookup CONTEXTUAL_virama_to_ra_c2;
} blws_old_2;

lookup blws_old_3 {
  sub gjJHA gjRAc2 by gjJH_RA;
  sub gjDA gjRAc2 by gjD_RA;
  sub gjHA gjRAc2 by gjH_RA;
} blws_old_3;

lookup blws_contextual {

  sub
    [gjNNA gjNN_RA]'
    [gjmU gjmUU gjmvR gjmvRR gjmvL gjmvLL gjVirama]
  by
    [gjNNA.matrau gjNN_RA.matrau];

  sub
    [gjK_SSA gjK_SS_RA gjNNA.matrau gjNN_RA.matrau]
    gjmU'
  by
    gjmU.small;

} blws_contextual;

lookup blws {

  sub gjRA gjmU  by gjRA_mU;
  sub gjRA gjmUU by gjRA_mUU;
  sub gjDA gjmvR by gjDA_mvR;
  sub gjHA gjmvR by gjHA_mvR;

  sub gjRAc2 gjmU by gjRAc2_mU;
  sub gjRAc2 gjmUU by gjRAc2_mUU;
  sub gjRAc2 gjmvR by gjRAc2_mvR;
  sub gjRAc2 gjmvRR by gjRAc2_mvRR;
  sub gjRAc2 gjmvL by gjRAc2_mvL;
  sub gjRAc2 gjmvLL by gjRAc2_mvLL;
  sub gjRAc2 gjVirama by gjRAc2_Virama;

} blws;


# --------------
# REUSED LOOKUPS
# --------------

# @matra_ii_ligatures = [
#   gjmII
#   gjmII_Reph
#   gjmII_Anusvara
#   # gjmII_Candrabindu
#   gjmII_Reph_Anusvara
#   # gjmII_Reph_Candrabindu
# ];

# @matra_ii_ligatures_long = [
#   gjmII.long
#   gjmII_Reph.long
#   gjmII_Anusvara.long
#   # gjmII_Candrabindu.long
#   gjmII_Reph_Anusvara.long
#   # gjmII_Reph_Candrabindu.long
# ];

# lookup REUSED_matra_ii_matching {
#   sub
#     @generated_BASES_FOR_WIDE_MATRA_II
#     @matra_ii_ligatures'
#     by
#     @matra_ii_ligatures_long;
# } REUSED_matra_ii_matching;
